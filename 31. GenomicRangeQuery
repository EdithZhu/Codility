https://app.codility.com/demo/results/trainingZD9F22-WTC/

class Solution {
    public int[] solution(String S, int[] P, int[] Q) {
        int pLen = P.length;
        int sLen = S.length();
        int[] res = new int[pLen];
        int[][] dp = new int[sLen+1][4];
        //accumulate sum
        for (int i=0;i<sLen;i++){
            for (int j=0;j<4;j++) {
                if (i >= 1) dp[i+1][j] = dp[i][j];
            }
            switch (S.charAt(i)){
                case 'A':
                dp[i+1][0]++;
                break;
                case 'C':
                dp[i+1][1]++;
                break;
                case 'G':
                dp[i+1][2]++;
                break;
                case 'T':
                dp[i+1][3]++;
                break;
            }
        }
        for (int i=0;i<pLen;i++) {
            int p = P[i], q = Q[i];
            for (int j=0;j<4;j++) {
                if (dp[q+1][j] - dp[p][j] > 0) {// # of ACGT 
                    res[i] = j + 1;
                    break;
                }
            }
        }
        return res;
    }
}
